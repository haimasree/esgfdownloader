#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.llnl.gov - 2022/10/26 07:58:53
# Search URL: https://esgf-node.llnl.gov/esg-search/wget?dataset_id=CMIP6.CMIP.MIROC.MIROC6.historical.r4i1p1f1.day.zg.gn.v20191016|esgf-data1.llnl.gov
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-node.llnl.gov/esg-search/wget?dataset_id=CMIP6.CMIP.MIROC.MIROC6.historical.r4i1p1f1.day.zg.gn.v20191016|esgf-data1.llnl.gov'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'zg_day_MIROC6_historical_r4i1p1f1_gn_18500101-18501231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18500101-18501231.nc' 'SHA256' '3e94cd0a09d7cd8b1a4b1b0b0ded69c0b850cc8524c7c17ada46e544db171bea'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18510101-18511231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18510101-18511231.nc' 'SHA256' 'c81c1db29e8dcdef945f7cdee9a01a44d17d5c0b9bb323254eade8a2037fc427'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18520101-18521231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18520101-18521231.nc' 'SHA256' 'e8ef0469001bff95f6a5a24c8276dd29676e6b71dc8874a72f27b2e273e535ce'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18530101-18531231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18530101-18531231.nc' 'SHA256' 'd356ced8793c652b1d05152c1338b403819dae1fcffc935f7761349c2c8edf6e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18540101-18541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18540101-18541231.nc' 'SHA256' '2f776cf876b26fb8555283447421c9ddb5d287c1eba764e43708cfc591e518a4'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18550101-18551231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18550101-18551231.nc' 'SHA256' '5e07f660f956d75014b3d43078296909b012fe57888beb1be590aac7ea046a56'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18560101-18561231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18560101-18561231.nc' 'SHA256' '6d7d9db88c323823f1bcb7799c6e83c162377704df1c339a8583bdf30692bddd'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18570101-18571231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18570101-18571231.nc' 'SHA256' 'a3786c4d15b7608b499197815617d5891d6600112aafee5f9e76e07c588653f2'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18580101-18581231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18580101-18581231.nc' 'SHA256' '8453dcfa81350272f2214d85006fce3ee25a44408c9aed984f8ac8a071570a3d'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18590101-18591231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18590101-18591231.nc' 'SHA256' '65df66020bbaef0d5013b33cd190e27f86d22fb3b90c2103603a5717503aa41e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18600101-18601231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18600101-18601231.nc' 'SHA256' '4e750ac7f5a8e9ca3b7059913a5106f6bf08513e9245524081914ac4c67f45de'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18610101-18611231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18610101-18611231.nc' 'SHA256' 'aa26ce7dd69f53e2de48424aa5ad8cbb1b7b2e9c933191ff76fa0e9dde6316c6'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18620101-18621231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18620101-18621231.nc' 'SHA256' '5c2ed216a1ffade8324d56a36bc82ed06806e6a9c36214e2cf4ee900c8d05e3f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18630101-18631231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18630101-18631231.nc' 'SHA256' 'b4c8cb3c895b8d8657ce9ee78d670c077b450c6737d559ed5b14c99587a8846a'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18640101-18641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18640101-18641231.nc' 'SHA256' '5780b35c169820f2f1d48628041b78254b385bc6c8a49336d448d63c0878e579'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18650101-18651231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18650101-18651231.nc' 'SHA256' '6023fc8fd464032d508fa1313629e0b38487cd85d286dcd0e360ed48f905e74b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18660101-18661231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18660101-18661231.nc' 'SHA256' '46a69ebb4fe84cb6dbd7240d22d96ffdf1f96b865f5b69f7c30a1fd535303e6e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18670101-18671231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18670101-18671231.nc' 'SHA256' '178a3b07939bf4624164a9602dd75970a3097656f9d4ae10709d0149134e3de7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18680101-18681231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18680101-18681231.nc' 'SHA256' '04aaf1eb5ef939d945d7de2c3c1c5781712e6c92a5ec3fca06a0175a7d9f7ed7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18690101-18691231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18690101-18691231.nc' 'SHA256' '60e21cb9ed0ab83351ad5dcd72851cab3750c41e3d77e094acac10611e59d151'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18700101-18701231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18700101-18701231.nc' 'SHA256' '302f949ec568d65545c295197f54631234161a10e2c4e4b0dd0f2d297bf755e4'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18710101-18711231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18710101-18711231.nc' 'SHA256' '6650ea9bf464a0c0eeec7522f0385b5442483effcc4d18d059bf0cf73f042457'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18720101-18721231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18720101-18721231.nc' 'SHA256' 'd97ec4d81f10887f63bad1dfdf6491003c3bc729900532e40f5ec8ff657f4211'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18730101-18731231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18730101-18731231.nc' 'SHA256' 'e9d17866a32fd0fa572b81de1b377626b4ec99fac921b38314b1c00be00f12e0'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18740101-18741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18740101-18741231.nc' 'SHA256' 'f7d7b98408c229db01dd7cf71da00945954e2914b46f4043fba238f526102c76'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18750101-18751231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18750101-18751231.nc' 'SHA256' 'eaa7aa2029c6ec3bcdd2c61e85b6da3b181c9160f482e9ac14cd73756b2fa2cc'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18760101-18761231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18760101-18761231.nc' 'SHA256' '225a57bb16ba195f74480cb3f2a16b8b322c55f83da517adb77e57d0d3f6e07a'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18770101-18771231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18770101-18771231.nc' 'SHA256' '10efc5f8466d5f0a40d4d000827f3ae61f44c86dc38b042d0d046ea00ecd8d43'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18780101-18781231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18780101-18781231.nc' 'SHA256' '6d32d273f116f75b524fd9aa302be716436f1dbd2004184c06445e64e7e2f2ce'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18790101-18791231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18790101-18791231.nc' 'SHA256' '5c9889a4333587733cfb0f046ce23d9acf1e59a47e0231ec06bea42260f04a75'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18800101-18801231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18800101-18801231.nc' 'SHA256' '33d36be61c21a492417bbd2b8c77cc8939462024f32c28f22f69f5de9e874fe7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18810101-18811231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18810101-18811231.nc' 'SHA256' '92dc088b6ac77b7350df60a4068a8fe61f1d44eb6d7885be1b37d72a12230656'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18820101-18821231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18820101-18821231.nc' 'SHA256' '74f03b714bea66dee3cc59b022fecc5ab40e1e248d7279c39c0e269860243b30'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18830101-18831231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18830101-18831231.nc' 'SHA256' '21d61d404c16f2e3039d1e4dd77b3a8fb13858089c7e16352dd14d4bdffda1a7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18840101-18841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18840101-18841231.nc' 'SHA256' '39f6e50abe06112063d08b19b5497e2ad254492e8b85765b23649bc130e96f71'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18850101-18851231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18850101-18851231.nc' 'SHA256' '2c00e6043215086a32c7dedaf5b27f5efd52d4c783aaf6a03d382f450ade232e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18860101-18861231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18860101-18861231.nc' 'SHA256' 'd3f409838244b5d137064718568dfdf5b0e5694b71f48cb71255d524e0cb9d08'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18870101-18871231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18870101-18871231.nc' 'SHA256' '1fe52e686fdfe481dd71cfedcc19db84f015e6f232af06f585abdc238a9a9a05'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18880101-18881231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18880101-18881231.nc' 'SHA256' '08b362a3aeafb2b4efe4cbb56b3dafd06269059309bcb37b49571aa2b325d4b0'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18890101-18891231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18890101-18891231.nc' 'SHA256' '7c31635e0401fcaeea7e217fca979806969ef3e30d56f29de20c8f4d407dd1a0'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18900101-18901231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18900101-18901231.nc' 'SHA256' '570ee5839f1cf9a398ec35b54b925354f3d432c820ea3ca66a85fbb915400ee7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18910101-18911231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18910101-18911231.nc' 'SHA256' 'f20e479d647114f1afc9f3fdbe4f6d5520f9115d1c594607477c26edaba968b2'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18920101-18921231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18920101-18921231.nc' 'SHA256' '2cde26e1edae5503cec002a255eb9837af8b10c269a265c0ec615b5121d6b751'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18930101-18931231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18930101-18931231.nc' 'SHA256' '5b8529181e3aa6fc5b5deeae882fd5660f0f6de84dfe472756ee65222a914494'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18940101-18941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18940101-18941231.nc' 'SHA256' '169bacd869cf35a724fda323c191178e6bab622bb1a6369b444f4042f26d8b18'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18950101-18951231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18950101-18951231.nc' 'SHA256' '6652af67c5be9cc5e6a91fa6c90fb94afae303d38b3bddb529e0cdfa07f4baaa'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18960101-18961231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18960101-18961231.nc' 'SHA256' '4b6da36da2af5a0db7dc87263b1c01f63c15fbb2bc79e7c541284847f6a92ac2'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18970101-18971231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18970101-18971231.nc' 'SHA256' '764f42ffbf9d34cbd90bead5c796084d60fb610dc56a011709c7fdf553e65488'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18980101-18981231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18980101-18981231.nc' 'SHA256' 'e8726401dd0342519d56f36df678beee02583f359397b66f3293abe816ab5d63'
'zg_day_MIROC6_historical_r4i1p1f1_gn_18990101-18991231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_18990101-18991231.nc' 'SHA256' 'b202b936342d3eb9440ce09466b54976ade70a68a66b4ab4ad1a8c7d690f40d8'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19000101-19001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19000101-19001231.nc' 'SHA256' '077dcf771affbe151100e6f8e347c109cb91a0abf067ba6f379221069c6d31be'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19010101-19011231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19010101-19011231.nc' 'SHA256' '470aaff0d33e77d93e6c83de83e5f07132ae4de13dcc05c94371927f0100746b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19020101-19021231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19020101-19021231.nc' 'SHA256' 'c8212966093bc5065d8360122ba728449cbd1db3601693008f583e8f31fff55d'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19030101-19031231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19030101-19031231.nc' 'SHA256' '517492526d107f0db3a37957e65f09b338d9175a3092ff90b2a49c5ec715acf8'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19040101-19041231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19040101-19041231.nc' 'SHA256' 'dd69d2ce467de993422abdff8936e1fa7617040ad4e1f178fc53c634be354465'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19050101-19051231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19050101-19051231.nc' 'SHA256' 'd32972bfcc98cbec7f036d5c382f0c1627eb18b92ffd00deb694c88b6b9241c9'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19060101-19061231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19060101-19061231.nc' 'SHA256' '5718eaf4b659c21260a6cd23663cf4d2a72638edb8fcca81d989926c8602c9fd'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19070101-19071231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19070101-19071231.nc' 'SHA256' '181f7e236b22a1bf918150459f9c7be61f4277f728a161e6aea903cc75eefcb1'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19080101-19081231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19080101-19081231.nc' 'SHA256' '2eacf46e903939966150edca7be214f7ff4bac1117971dd0f5772bf5acc19717'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19090101-19091231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19090101-19091231.nc' 'SHA256' '7cee88b4961dcd10e0c15470043f6b39773d880173dbb7a1e7531c07cbc1799c'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19100101-19101231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19100101-19101231.nc' 'SHA256' '780612e31a74fdce2177a0bcee4713c8f39d766ad89521821fbde78834257ec0'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19110101-19111231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19110101-19111231.nc' 'SHA256' '62f41218b08987fca06349c9601bc53d203537dfe394b1fa61650fb91df0bf86'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19120101-19121231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19120101-19121231.nc' 'SHA256' 'f521df3eca7bf8c12655757bb4232bae3c88fb3540be8ae4551e84853c88c91d'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19130101-19131231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19130101-19131231.nc' 'SHA256' 'c4d6c275a5759fced5c3a8839873bca538218ccf84a75293c21daa70d9b719fe'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19140101-19141231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19140101-19141231.nc' 'SHA256' 'e334cacab0a173ca6df4623d08f1e5f57ac58b3397745d38d66af54bc73bcb27'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19150101-19151231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19150101-19151231.nc' 'SHA256' '2e7d8b8fc5165128308dba028e7f0204d24b308b7f7f080fd73ba0d9b745990a'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19160101-19161231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19160101-19161231.nc' 'SHA256' '4e3f651fc30eac3373a821abbe5594c02fd800e978ae692f3df64f6f9bf91630'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19170101-19171231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19170101-19171231.nc' 'SHA256' '15e144926dc52515853fc7e4edd0816c2a64f680f0f060daa7a822deceae82fb'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19180101-19181231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19180101-19181231.nc' 'SHA256' '1f23f7eea7dc6655a46ebcc09e39b8183407e28c845ebb9803a073b6e3501154'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19190101-19191231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19190101-19191231.nc' 'SHA256' 'e4f5f1e591079cdc17513bd99e11145f273b4a8ba670cb3f6669b3de5830649d'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19200101-19201231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19200101-19201231.nc' 'SHA256' '1ed514bbdd475f92c2185d389ed2a0cf6a87efbd00dd82b739238659506b937c'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19210101-19211231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19210101-19211231.nc' 'SHA256' '723f6898f5a4c90ecbf38658826534ddccc1be1cd4d35bb5cb67ff591290e897'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19220101-19221231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19220101-19221231.nc' 'SHA256' 'a31445f7bdf5fdd89e1172174e7f9bf26362ac50a2c467b510b4875a4e40904e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19230101-19231231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19230101-19231231.nc' 'SHA256' '44d0bc44ae2432ad4cdefc570ba4f6dabe114ce3b4bf714035e5d539ae778864'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19240101-19241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19240101-19241231.nc' 'SHA256' '12fa25fb151c6b81fc28b4493165d0b32a0c7fa6f4632980b1b632997120d6c9'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19250101-19251231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19250101-19251231.nc' 'SHA256' '50ae04d8bea0d916c21c8a04c267718770d0661ff2c6d0c97371d859a2b2e08b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19260101-19261231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19260101-19261231.nc' 'SHA256' 'e21dbb07ea56a4bf6cadffe864208f36dcc082c80d9bdd787d43a3f84318ca2b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19270101-19271231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19270101-19271231.nc' 'SHA256' '3c48f5b30f34ce4bc12d2a70b0ef8586cf3025586f39dee9ef1f01e65a83a00d'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19280101-19281231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19280101-19281231.nc' 'SHA256' '7aafab798f69677c51b66a3a24dc1e734cc6ccf706c7fdc11486e655f835b072'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19290101-19291231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19290101-19291231.nc' 'SHA256' 'b52196213844d5c530e6a50e44fa76bcafbebebbdc19ac29ce6bc0f963eaef25'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19300101-19301231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19300101-19301231.nc' 'SHA256' 'f4f69edf1460ff61821135594277bbe2c8af41789b1bdc0a43d84f2e2e86ae30'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19310101-19311231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19310101-19311231.nc' 'SHA256' '08037c879e6b50a905e824696b20371490532bdb147046f0ccbf0773448cf45f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19320101-19321231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19320101-19321231.nc' 'SHA256' '8acab6a12024433e1acadea30bf4b2040dfc45380622a22f5b18ca41f4e2eb06'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19330101-19331231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19330101-19331231.nc' 'SHA256' '6ab39498bca0f2d7d2e3519555ad1cad0e9513e860f7568f4d1d635911697213'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19340101-19341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19340101-19341231.nc' 'SHA256' '2442c442dc85db3ca9de90da206542eeca10ca7d2a7b4b4c69ccf83d09563b03'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19350101-19351231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19350101-19351231.nc' 'SHA256' 'db744c15d5a01f5f46fadab76d3ab49cb94d03222ad798f5b1c4e7efa1a7b462'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19360101-19361231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19360101-19361231.nc' 'SHA256' 'bc7cf1ecbabcbacb00fada2f4097454b4a7b01ed87a33fcc7105ab3c11bdb87f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19370101-19371231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19370101-19371231.nc' 'SHA256' '08f91764abb82e6231b2482ca0fdb09911f06f98f49014b2271b5fadb62e3281'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19380101-19381231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19380101-19381231.nc' 'SHA256' 'bdb8b60bb333924e25abcd141b6b1652fa4098594cb3f4f89b3fa14e7e2c5cc8'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19390101-19391231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19390101-19391231.nc' 'SHA256' '41ccb7fc8a60e55778dfda1541b66a54eb0afbc46844508e7d9fe4374433a685'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19400101-19401231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19400101-19401231.nc' 'SHA256' 'b00e3dd841963e7945b20622e394d2a0058773e7167e995543e1a5b8259e283a'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19410101-19411231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19410101-19411231.nc' 'SHA256' '983d5c80b13f3ee06a078b7a7666bcb0da2c3bab9017b57c0478eb259190ba15'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19420101-19421231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19420101-19421231.nc' 'SHA256' 'fe7911a0897b7a04661b5a0fa70703bd1a8621388866f702602a33c87996222b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19430101-19431231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19430101-19431231.nc' 'SHA256' '1364772ff970659b38808b6ec7c03be0313afd4c86c5ef0d277cf989590230ee'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19440101-19441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19440101-19441231.nc' 'SHA256' '73c68bb655847c08e60ded8e0b0e0218484eaa2e61270fc50aa6fe466d06b62b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19450101-19451231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19450101-19451231.nc' 'SHA256' '5b348caea349a3b9c27dfb7d3a6e78b835fd76a52d1cb379f5f8b275b4a03b44'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19460101-19461231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19460101-19461231.nc' 'SHA256' 'd23f1006199eaaafbdb82492de95cf3661406bb41ebddfaf4ce0aae2ab618ec9'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19470101-19471231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19470101-19471231.nc' 'SHA256' '06ee08ac4abc5ee0548b528ecb77850c5c3ef2ecc2db8139b77bc52ec961b306'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19480101-19481231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19480101-19481231.nc' 'SHA256' 'fbedffc1ad517a72ac2dc50c5faf2f3d0f9b9f280f31376dbd2d5a69c717b074'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19490101-19491231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19490101-19491231.nc' 'SHA256' 'dd416066a7bb05393652d7472388d037f122b8b335b3905de66b7f0523027f31'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19500101-19501231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19500101-19501231.nc' 'SHA256' 'b809590f2b444476d4398225dbe2ab06e2b34e766fffdb6feafa618e3b9e4da5'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19510101-19511231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19510101-19511231.nc' 'SHA256' '17769db2010598a6779679094077776b8f645bbafeb0dad2ce98eed9813de859'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19520101-19521231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19520101-19521231.nc' 'SHA256' 'df2b799af50b0dc4978b578b20a2f3a1d5c561f40c63c9c563638a454c1bce1c'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19530101-19531231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19530101-19531231.nc' 'SHA256' '9096bd47cee1a89eba8cb4408ade288c4f93f290d6f2019f1f6e0d3674d025da'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19540101-19541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19540101-19541231.nc' 'SHA256' '1c16e02e8ca5864cb5a7c877a55d4bb9926558e3cb4bdf3368e82a5281cad750'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19550101-19551231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19550101-19551231.nc' 'SHA256' 'faab2bf8b2c9061ea363d6ad6b83b15260e41226a19a0f1ba306eda6b12c8838'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19560101-19561231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19560101-19561231.nc' 'SHA256' '840f7f7b47fe0c72e00c0ee41d2c87c5d48c1bf471f64224d3a38add1b0df939'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19570101-19571231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19570101-19571231.nc' 'SHA256' '55db2db6ec6a7545a1da94afca97e7865ec2d75d4a0aa15e7842ec1fe97f43e2'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19580101-19581231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19580101-19581231.nc' 'SHA256' '6af3a590da5aa782b6a2b216d3896e6d3b3c84ef79c8b9671bb119023e9f1202'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19590101-19591231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19590101-19591231.nc' 'SHA256' 'b2d4a8634594f84b7c48152766743555f5b567d4bb2ec3a77a0c672ff8d50269'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19600101-19601231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19600101-19601231.nc' 'SHA256' 'f9edbe8c7923229aa9449ddf5e0d375a2b667b92ca772e427926866d847538a6'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19610101-19611231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19610101-19611231.nc' 'SHA256' 'f1c24daddeaa95946b027b34cb03060a4ce5bae9c8aa35dd0c8b147ee5018b9b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19620101-19621231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19620101-19621231.nc' 'SHA256' '2e7ea0355237187d256a5b1808b5121cef5464a810d5f565c30c98c49e3619bc'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19630101-19631231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19630101-19631231.nc' 'SHA256' 'a077932671f063a342e0a53efa281b80db87be821cb17ddc41990c4925457763'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19640101-19641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19640101-19641231.nc' 'SHA256' '52163575652d62c69a2a4726dddc48ba972c4f671ff642ae624201df6c1dab7a'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19650101-19651231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19650101-19651231.nc' 'SHA256' '02a42c3cab575533cce5a1d7864c518a70f3c5e6e598d4f0e5d7f87d041dbb4e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19660101-19661231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19660101-19661231.nc' 'SHA256' 'e2817eb5fc55456219dcabbb76e69a1f0749ed4084bf17d2c18580299531add2'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19670101-19671231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19670101-19671231.nc' 'SHA256' 'ff1323c1ec017cdb28276bbc3b4ba48fbbd2fdf782137f261f29956c5c6c535f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19680101-19681231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19680101-19681231.nc' 'SHA256' 'f6ef973633aceb510806a0d32dc5bbf981562ceec433688a3feab5db0afc539b'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19690101-19691231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19690101-19691231.nc' 'SHA256' '64acf25a7daaeab5b59cf08e73e13de8336809168a1efd408422f533866f866f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19700101-19701231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19700101-19701231.nc' 'SHA256' 'a66c24cbd20cb3ca0b41ddec9d9b2129e3c9b1633805ea60c65dd5da21c66b31'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19710101-19711231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19710101-19711231.nc' 'SHA256' 'b0abbb64a20dc73d2d02c9c2ba97ffd44e66a1d1a7183f558a86d5de16beaddc'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19720101-19721231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19720101-19721231.nc' 'SHA256' '81c4fb5b2dd412ea8251e755cf047bacd0e33ee79732e3c86ce48eeae2f02ed3'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19730101-19731231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19730101-19731231.nc' 'SHA256' '1a5e5e08773c4dc162262da6abe902ff006e3649fed9cd5d3c82d4f25f29a0a9'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19740101-19741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19740101-19741231.nc' 'SHA256' '9eb36dfadc63dccadfc0dcebdf333ae154f32be089db7390d1a7285589413c7e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19750101-19751231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19750101-19751231.nc' 'SHA256' 'c5085a48661dc88015045e4e9226299b061f149c5cc4bf10580cf2b5df558c5c'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19760101-19761231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19760101-19761231.nc' 'SHA256' 'ea28a243a07d038fd6bafc58a5cdcf77b76d3a074ffa072f7b194dc15533b962'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19770101-19771231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19770101-19771231.nc' 'SHA256' '6906832c48917e77c62e4f6c0fc8e6c98c8f49bfe6e001785b0ed2d2c1dc7bc3'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19780101-19781231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19780101-19781231.nc' 'SHA256' 'a9b26611ca47d6741f80452aca67e79531c76b3dc2ce1b92907e4fedca9d9262'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19790101-19791231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19790101-19791231.nc' 'SHA256' '4d6874879fadd1a3c22eadf0cd2bc4039042f3dd0c3c6a039384b50d60e6c698'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19800101-19801231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19800101-19801231.nc' 'SHA256' '6aeeca36275d745afbc5739d7e7d9847961ed81c92278a04bb550bf1e6d0d91f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19810101-19811231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19810101-19811231.nc' 'SHA256' 'b7d8d008a10b13b1edb263ec28a9444bdad00269ca638ad2842b91fd2014d9a4'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19820101-19821231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19820101-19821231.nc' 'SHA256' '9af712f30795e07a46220d3365758d5323881b4e0dfa35c1b00902e7157aa189'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19830101-19831231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19830101-19831231.nc' 'SHA256' 'b80b70ee790fbd6a90b115d08426c23e4146cf6ccb3cf65dccb61b9fcde00366'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19840101-19841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19840101-19841231.nc' 'SHA256' '8317c833993deaf4305201f7d3ff04eb248d2ff770d40fe69b20da68f69f0df0'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19850101-19851231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19850101-19851231.nc' 'SHA256' 'd485f88d95fe0737ad4fd6c845c5a0fba288dbfa2a4e376bc3452f9ebbc22a4d'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19860101-19861231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19860101-19861231.nc' 'SHA256' '3ba4e77044c3254207dfdd67e8ab78ce0fd440fb56c3263abe9b721a73f8f9a9'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19870101-19871231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19870101-19871231.nc' 'SHA256' '1423b0f9d3775e59d09995268b9e77c3c12efb362296f7fd479d8273c4d75ea7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19880101-19881231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19880101-19881231.nc' 'SHA256' 'df022bc30c6bf8e338751378ff48542ee020570450a91c0462a168ada55c950e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19890101-19891231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19890101-19891231.nc' 'SHA256' 'fd61bb0cae790bd256cded52a95aabbd92529284b542cafd66365aa777c6c671'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19900101-19901231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19900101-19901231.nc' 'SHA256' '2bd7070f9c63a188ad6ec90b58a03d7803c0382326ac98cd0fa8e6ef6df6adaa'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19910101-19911231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19910101-19911231.nc' 'SHA256' '564576da026b02d8d16ddb7cfff4681535be8ba336eda2593ae6f3b3e43d27b0'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19920101-19921231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19920101-19921231.nc' 'SHA256' '7cebfe1619e5e756d769f4d6aa0463c7b41d7bf36eec9da25e2c7b2e4b2dc43e'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19930101-19931231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19930101-19931231.nc' 'SHA256' '17df3a1bc0af1d5f14f245b3a670d96ee2234d27ad30734dc7785a2cf525b49a'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19940101-19941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19940101-19941231.nc' 'SHA256' '8048cfb7a78ac8e965a26c4e25978e1068cb6720b5ebecec04cb5f7debd4b628'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19950101-19951231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19950101-19951231.nc' 'SHA256' 'cb52453fb844a8205a42e1e23dfa7c1afc0a6ebc312936c37869f9088da99695'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19960101-19961231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19960101-19961231.nc' 'SHA256' '52619a53471e9020e755a42f06a6b2f700ef364ecef5341f4e021c66aaf516d7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19970101-19971231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19970101-19971231.nc' 'SHA256' 'ec084c7ce3ed9f3255bb9ea4f583596edd2b4045c625a3163be77df07eff14a6'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19980101-19981231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19980101-19981231.nc' 'SHA256' 'b49035fb816375b4768f7204646c23ad9d2e05c319cc63c21777e8570d960d77'
'zg_day_MIROC6_historical_r4i1p1f1_gn_19990101-19991231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_19990101-19991231.nc' 'SHA256' 'b8614dcd266d11399368fa4974618424960c08ccd14749959677988a4b980bad'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20000101-20001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20000101-20001231.nc' 'SHA256' 'f28d8b2c7caec76efaf931d62101a934c92f04e05e02c23db64ebddc013b3b69'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20010101-20011231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20010101-20011231.nc' 'SHA256' 'c503bce29815da139d9816833071d09242b71884ba10bf292a0ecd31101e2e1c'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20020101-20021231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20020101-20021231.nc' 'SHA256' 'd5a8b38c4ff25201a987b90471122be7b268525a66bee0b81614d8e240a0ae00'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20030101-20031231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20030101-20031231.nc' 'SHA256' '9c556e1beb8fa55e9c0dfb446675d14062f5add0e2979f952e46437ae3834c57'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20040101-20041231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20040101-20041231.nc' 'SHA256' '02ba35530265b394e8de9675d65acab88feaeada4078f50973f2cec0d0d58f2f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20050101-20051231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20050101-20051231.nc' 'SHA256' '1e06722155c68b0a4e6818bbffbcffe3da472c84d26888b9015f01e4b40d3b7f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20060101-20061231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20060101-20061231.nc' 'SHA256' '548272757537d2433c0511c8ab53121f3b6f09a9ed7fbdce11c31b9cdc1bfea3'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20070101-20071231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20070101-20071231.nc' 'SHA256' 'cfa0d5bd68de5d947eebf820be423e9e3ad43397c2d7cf3281b5db43fa27485c'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20080101-20081231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20080101-20081231.nc' 'SHA256' 'e99f176f329ab459bf8c13a01fdd4d31c3591f697d52491a5ba21c44d56e1630'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20090101-20091231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20090101-20091231.nc' 'SHA256' '4bbceac35b8e0e15fdf5f8d90368875a0c1071669f4385ff46b906deeeddb2d5'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20100101-20101231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20100101-20101231.nc' 'SHA256' '69abdb61f2e76671710b4bcd9898521f20e9a883a63780fa1b1720638c55de2f'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20110101-20111231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20110101-20111231.nc' 'SHA256' '736f32449bea1085aec60e61370dcf4f811af2762b6c0e3507c9e68e211c72f7'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20120101-20121231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20120101-20121231.nc' 'SHA256' '76d6b28eed2b45a94a45ae1870a86fd52d40b38066e40464ce67e3dab6934109'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20130101-20131231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20130101-20131231.nc' 'SHA256' '1d0c096741a79b03c7dfecb20c677ad802ee5785bcff3ad0142f6864611df891'
'zg_day_MIROC6_historical_r4i1p1f1_gn_20140101-20141231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r4i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r4i1p1f1_gn_20140101-20141231.nc' 'SHA256' '9f8471ed518333145c949bbf50b420d6eea0213910e77e8647a4a7894c5cabb0'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
